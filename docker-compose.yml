
services:
  reverse-proxy:
    image: traefik:v2.11
    container_name: traefik
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - traefik
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  app:
    build: .
    container_name: youtube-app
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    # Resource limits (compose)
    cpus: "2.0"
    mem_limit: "4g"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      # Pass-through secrets from host .env or environment
      - SEO_YOUTUBE_API_KEY=${SEO_YOUTUBE_API_KEY}
      # Make app use docker network host for Ollama
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_TIMEOUT=600
      - OLLAMA_NUM_PREDICT=200
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4o-mini
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production

    ports:
      - "127.0.0.1:8000:8000"

    volumes:
      - ./:/app
      - ./config/client_secret.json:/app/config/client_secret.json
      - ./config/token.json:/app/config/token.json
    command: ["python", "start_services.py", "--config", "config/video.docker.yaml", "--sources", "config/sources.yaml", "--log-level", "INFO", "--monitor-host", "0.0.0.0", "--monitor-port", "8000"]
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8000/').getcode()<500 else 1)\""]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - traefik
      - default
    labels:
      - traefik.enable=true
      - traefik.http.routers.monitor.rule=Host(`${MONITOR_HOST}`)
      - traefik.http.routers.monitor.entrypoints=websecure
      - traefik.http.routers.monitor.tls.certresolver=le
      - traefik.http.services.monitor.loadbalancer.server.port=8000
      - traefik.http.routers.monitor.middlewares=monitor-auth@docker
      - traefik.http.middlewares.monitor-auth.basicauth.users=${MONITOR_BASIC_AUTH}

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama:/root/.ollama
    healthcheck:
      test: ["CMD", "ollama", "--version"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 20s
    restart: unless-stopped
    cpus: "4.0"
    mem_limit: "8g"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  ci:
    build:
      context: .
      dockerfile: Dockerfile.ci
    container_name: youtube-ci
    profiles: ["dev"]
    working_dir: /app
    volumes:
      - ./:/app
    # Default: run full local CI (lint + unit + integration)
    command: ["bash", "-lc", "bash /app/scripts/ci.sh all"]

  cleanup:
    image: python:3.12-slim
    container_name: youtube-cleanup
    working_dir: /app
    volumes:
      - ./:/app
    command: >
      bash -lc 'set -e; chmod +x /app/scripts/cleanup.sh || true; /app/scripts/cleanup.sh; while true; do sleep 86400; /app/scripts/cleanup.sh; done'
    depends_on:
      - app
    restart: unless-stopped
    cpus: "0.5"
    mem_limit: "512m"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"


volumes:
  ollama:
  letsencrypt:

networks:
  traefik:
