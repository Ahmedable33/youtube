source .venv312/bin/activate
python main.py telegram-bot --sources config/sources.yaml


source .venv312/bin/activate
python main.py worker --queue-dir queue --archive-dir queue_archive --config config/video.yaml --log-level INFO




source .venv312/bin/activate
python scheduler_daemon.py --schedule-dir ./schedule --queue-dir ./queue --archive-dir ./queue_archive --interval 60


source .venv312/bin/activate
python monitor.py --host 127.0.0.1 --port 8000 --queue-dir ./queue --archive-dir ./queue_archive

ollama serve



 python start_services.py --sources config/sources.yaml --config config/video.yaml --queue-dir queue --archive-dir queue_archive --schedule-dir schedule --monitor-host 127.0.0.1 --monitor-port 8000 --log-level INFO
















 # récupérer tout depuis le remote
git fetch origin

# mettre à jour main local
git checkout main
git pull --ff-only origin main    # ou `git pull --rebase` si tu préfères

# créer la branche à partir de main à jour
git checkout -b feature/ma-tache



docker exec -w /app youtube-app bash -lc \
  'python main.py ai-meta --topic "Ton nouveau sujet" \
    --provider ollama --video-path ./test_video.mp4 \
    --out-config config/video.docker.yaml --print && \
   python main.py upload --config config/video.docker.yaml \
    --client-secrets client_secret.json --headless --log-level INFO'


    Commandes utiles
    -Arrêt de la stack

    docker compose down

    -Redémarrage

    docker compose up -d
