name: Configure Branch Protection

on:
  workflow_dispatch:
    inputs:
      approvals:
        description: "Number of required PR approvals (0, 1 or 2)"
        type: choice
        options: ["0", "1", "2"]
        default: "0"
      require_code_owner_reviews:
        description: "Require CODEOWNERS reviews"
        type: boolean
        default: false
      require_up_to_date:
        description: "Require branches to be up to date before merging"
        type: boolean
        default: true
      branch:
        description: "Branch to protect"
        type: string
        default: "main"

jobs:
  protect:
    name: Apply protection rules
    runs-on: ubuntu-latest
    steps:
      - name: Check inputs
        run: |
          echo "Approvals: ${{ inputs.approvals }}"
          echo "Require CODEOWNERS: ${{ inputs.require_code_owner_reviews }}"
          echo "Require up-to-date: ${{ inputs.require_up_to_date }}"
          echo "Branch: ${{ inputs.branch }}"

      - name: Apply protection via GitHub API
        env:
          GH_TOKEN: ${{ secrets.BRANCH_PROTECTION_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ inputs.branch }}
          APPROVALS: ${{ inputs.approvals }}
          REQUIRE_CODEOWNERS: ${{ inputs.require_code_owner_reviews }}
          REQUIRE_UP_TO_DATE: ${{ inputs.require_up_to_date }}
        run: |
          set -e
          if [ -z "$GH_TOKEN" ]; then
            echo "Missing BRANCH_PROTECTION_TOKEN secret. Please create a PAT with 'repo' admin access and add it in repository Secrets." >&2
            exit 1
          fi

          OWNER=$(echo "$REPO" | cut -d'/' -f1)
          NAME=$(echo "$REPO" | cut -d'/' -f2)

          # Convert booleans to JSON true/false
          if [ "$REQUIRE_CODEOWNERS" = "true" ]; then CODEOWNERS=true; else CODEOWNERS=false; fi
          if [ "$REQUIRE_UP_TO_DATE" = "true" ]; then STRICT=true; else STRICT=false; fi

          # Build JSON payload
          cat > body.json <<'JSON'
          {
            "required_status_checks": {
              "strict": PLACEHOLDER_STRICT,
              "checks": [
                { "context": "CI / tests" }
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "required_approving_review_count": PLACEHOLDER_APPROVALS,
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": PLACEHOLDER_CODEOWNERS
            },
            "restrictions": null,
            "required_linear_history": true,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "block_creations": false
          }
          JSON

          # Replace placeholders safely
          sed -i "s/PLACEHOLDER_STRICT/$STRICT/g" body.json
          sed -i "s/PLACEHOLDER_APPROVALS/$APPROVALS/g" body.json
          sed -i "s/PLACEHOLDER_CODEOWNERS/$CODEOWNERS/g" body.json

          echo "Applying branch protection on $OWNER/$NAME:$BRANCH"
          curl -sfSL -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$OWNER/$NAME/branches/$BRANCH/protection" \
            -d @body.json

          echo "Branch protection applied successfully."
