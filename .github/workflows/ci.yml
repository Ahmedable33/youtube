name: CI/CD Pipeline

on:
  push:
    branches: [ main, 'feature/*', 'fix/*', 'hotfix/*' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Désactive les exécutions simultanées pour les mêmes événements de workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Nécessaire pour les vérifications de commit

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
        pip install black flake8 mypy

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --max-complexity=10 --max-line-length=120 --statistics

    - name: Check formatting with Black
      run: |
        black --check --diff --color src/ tests/

    - name: Run type checking with mypy
      run: |
        mypy --install-types --non-interactive src/

    - name: Run tests with pytest
      run: |
        pytest -v --cov=src --cov-report=xml --junitxml=test-results.xml
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results.xml
          coverage.xml

  # Ajout d'un job de déploiement conditionnel pour main
  deploy:
    name: Deploy
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Ici, ajoutez les étapes de déploiement spécifiques à votre projet
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        # Exemple: ./deploy.sh
